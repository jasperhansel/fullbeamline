# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = cdf$(EXEEXT) cheb$(EXEEXT) combination$(EXEEXT) \
	diff$(EXEEXT) dwt$(EXEEXT) error_1$(EXEEXT) error_2$(EXEEXT) \
	error_3$(EXEEXT) error_4$(EXEEXT) fitting$(EXEEXT) \
	fitting3$(EXEEXT) fitting2$(EXEEXT) histogram$(EXEEXT) \
	histogram2d$(EXEEXT) ieee$(EXEEXT) ieeeround$(EXEEXT) \
	integration$(EXEEXT) interp$(EXEEXT) interpp$(EXEEXT) \
	intro$(EXEEXT) matrix$(EXEEXT) min$(EXEEXT) monte$(EXEEXT) \
	multifit$(EXEEXT) nlfit$(EXEEXT) nlfit2$(EXEEXT) \
	nlfit4$(EXEEXT) ntuplew$(EXEEXT) ntupler$(EXEEXT) \
	linalglu$(EXEEXT) eigen$(EXEEXT) eigen_nonsymm$(EXEEXT) \
	fft$(EXEEXT) ode-initval$(EXEEXT) permutation$(EXEEXT) \
	permshuffle$(EXEEXT) polyroots$(EXEEXT) qrng$(EXEEXT) \
	randpoisson$(EXEEXT) randwalk$(EXEEXT) rng$(EXEEXT) \
	rngunif$(EXEEXT) roots$(EXEEXT) siman$(EXEEXT) stat$(EXEEXT) \
	statsort$(EXEEXT) sum$(EXEEXT) vector$(EXEEXT) \
	spmatrix$(EXEEXT) splinalg$(EXEEXT) rstat$(EXEEXT)
XFAIL_TESTS = error_1$(EXEEXT)
subdir = doc/examples
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp $(dist_fgsl_example_DATA) \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_cdf_OBJECTS = cdf.$(OBJEXT)
cdf_OBJECTS = $(am_cdf_OBJECTS)
cdf_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
cdf_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_cheb_OBJECTS = cheb.$(OBJEXT)
cheb_OBJECTS = $(am_cheb_OBJECTS)
cheb_LDADD = $(LDADD)
cheb_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_combination_OBJECTS = combination.$(OBJEXT)
combination_OBJECTS = $(am_combination_OBJECTS)
combination_LDADD = $(LDADD)
combination_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_diff_OBJECTS = diff.$(OBJEXT)
diff_OBJECTS = $(am_diff_OBJECTS)
diff_LDADD = $(LDADD)
diff_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_dwt_OBJECTS = dwt-dwt.$(OBJEXT)
dwt_OBJECTS = $(am_dwt_OBJECTS)
dwt_LDADD = $(LDADD)
dwt_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
dwt_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(dwt_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_eigen_OBJECTS = eigen.$(OBJEXT)
eigen_OBJECTS = $(am_eigen_OBJECTS)
eigen_LDADD = $(LDADD)
eigen_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_eigen_nonsymm_OBJECTS = eigen_nonsymm.$(OBJEXT)
eigen_nonsymm_OBJECTS = $(am_eigen_nonsymm_OBJECTS)
eigen_nonsymm_LDADD = $(LDADD)
eigen_nonsymm_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_error_1_OBJECTS = error_1.$(OBJEXT)
error_1_OBJECTS = $(am_error_1_OBJECTS)
error_1_LDADD = $(LDADD)
error_1_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_error_2_OBJECTS = error_2.$(OBJEXT)
error_2_OBJECTS = $(am_error_2_OBJECTS)
error_2_LDADD = $(LDADD)
error_2_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_error_3_OBJECTS = error_3.$(OBJEXT)
error_3_OBJECTS = $(am_error_3_OBJECTS)
error_3_LDADD = $(LDADD)
error_3_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_error_4_OBJECTS = error_4.$(OBJEXT)
error_4_OBJECTS = $(am_error_4_OBJECTS)
error_4_LDADD = $(LDADD)
error_4_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_fft_OBJECTS = fft.$(OBJEXT)
fft_OBJECTS = $(am_fft_OBJECTS)
fft_LDADD = $(LDADD)
fft_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_fitting_OBJECTS = fitting.$(OBJEXT)
fitting_OBJECTS = $(am_fitting_OBJECTS)
fitting_LDADD = $(LDADD)
fitting_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_fitting2_OBJECTS = fitting2.$(OBJEXT)
fitting2_OBJECTS = $(am_fitting2_OBJECTS)
fitting2_LDADD = $(LDADD)
fitting2_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_fitting3_OBJECTS = fitting3.$(OBJEXT)
fitting3_OBJECTS = $(am_fitting3_OBJECTS)
fitting3_LDADD = $(LDADD)
fitting3_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_histogram_OBJECTS = histogram-histogram.$(OBJEXT)
histogram_OBJECTS = $(am_histogram_OBJECTS)
histogram_LDADD = $(LDADD)
histogram_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
histogram_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(histogram_FCFLAGS) \
	$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_histogram2d_OBJECTS = histogram2d.$(OBJEXT)
histogram2d_OBJECTS = $(am_histogram2d_OBJECTS)
histogram2d_LDADD = $(LDADD)
histogram2d_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_ieee_OBJECTS = ieee.$(OBJEXT)
ieee_OBJECTS = $(am_ieee_OBJECTS)
ieee_LDADD = $(LDADD)
ieee_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_ieeeround_OBJECTS = ieeeround.$(OBJEXT)
ieeeround_OBJECTS = $(am_ieeeround_OBJECTS)
ieeeround_LDADD = $(LDADD)
ieeeround_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_integration_OBJECTS = integration.$(OBJEXT)
integration_OBJECTS = $(am_integration_OBJECTS)
integration_LDADD = $(LDADD)
integration_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_interp_OBJECTS = interp.$(OBJEXT)
interp_OBJECTS = $(am_interp_OBJECTS)
interp_LDADD = $(LDADD)
interp_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_interpp_OBJECTS = interpp.$(OBJEXT)
interpp_OBJECTS = $(am_interpp_OBJECTS)
interpp_LDADD = $(LDADD)
interpp_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_intro_OBJECTS = intro.$(OBJEXT)
intro_OBJECTS = $(am_intro_OBJECTS)
intro_LDADD = $(LDADD)
intro_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_linalglu_OBJECTS = linalglu.$(OBJEXT)
linalglu_OBJECTS = $(am_linalglu_OBJECTS)
linalglu_LDADD = $(LDADD)
linalglu_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_matrix_OBJECTS = matrix.$(OBJEXT)
matrix_OBJECTS = $(am_matrix_OBJECTS)
matrix_LDADD = $(LDADD)
matrix_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_min_OBJECTS = min.$(OBJEXT)
min_OBJECTS = $(am_min_OBJECTS)
min_LDADD = $(LDADD)
min_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_monte_OBJECTS = monte.$(OBJEXT)
monte_OBJECTS = $(am_monte_OBJECTS)
monte_LDADD = $(LDADD)
monte_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_multifit_OBJECTS = multifit.$(OBJEXT)
multifit_OBJECTS = $(am_multifit_OBJECTS)
multifit_LDADD = $(LDADD)
multifit_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_nlfit_OBJECTS = nlfit.$(OBJEXT)
nlfit_OBJECTS = $(am_nlfit_OBJECTS)
nlfit_LDADD = $(LDADD)
nlfit_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_nlfit2_OBJECTS = nlfit2.$(OBJEXT)
nlfit2_OBJECTS = $(am_nlfit2_OBJECTS)
nlfit2_LDADD = $(LDADD)
nlfit2_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_nlfit4_OBJECTS = nlfit4.$(OBJEXT)
nlfit4_OBJECTS = $(am_nlfit4_OBJECTS)
nlfit4_LDADD = $(LDADD)
nlfit4_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_ntupler_OBJECTS = ntupler.$(OBJEXT)
ntupler_OBJECTS = $(am_ntupler_OBJECTS)
ntupler_LDADD = $(LDADD)
ntupler_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_ntuplew_OBJECTS = ntuplew.$(OBJEXT)
ntuplew_OBJECTS = $(am_ntuplew_OBJECTS)
ntuplew_LDADD = $(LDADD)
ntuplew_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_ode_initval_OBJECTS = ode-initval.$(OBJEXT)
ode_initval_OBJECTS = $(am_ode_initval_OBJECTS)
ode_initval_LDADD = $(LDADD)
ode_initval_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_permshuffle_OBJECTS = permshuffle.$(OBJEXT)
permshuffle_OBJECTS = $(am_permshuffle_OBJECTS)
permshuffle_LDADD = $(LDADD)
permshuffle_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_permutation_OBJECTS = permutation.$(OBJEXT)
permutation_OBJECTS = $(am_permutation_OBJECTS)
permutation_LDADD = $(LDADD)
permutation_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_polyroots_OBJECTS = polyroots.$(OBJEXT)
polyroots_OBJECTS = $(am_polyroots_OBJECTS)
polyroots_LDADD = $(LDADD)
polyroots_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_qrng_OBJECTS = qrng.$(OBJEXT)
qrng_OBJECTS = $(am_qrng_OBJECTS)
qrng_LDADD = $(LDADD)
qrng_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_randpoisson_OBJECTS = randpoisson.$(OBJEXT)
randpoisson_OBJECTS = $(am_randpoisson_OBJECTS)
randpoisson_LDADD = $(LDADD)
randpoisson_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_randwalk_OBJECTS = randwalk.$(OBJEXT)
randwalk_OBJECTS = $(am_randwalk_OBJECTS)
randwalk_LDADD = $(LDADD)
randwalk_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_rng_OBJECTS = rng.$(OBJEXT)
rng_OBJECTS = $(am_rng_OBJECTS)
rng_LDADD = $(LDADD)
rng_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_rngunif_OBJECTS = rngunif.$(OBJEXT)
rngunif_OBJECTS = $(am_rngunif_OBJECTS)
rngunif_LDADD = $(LDADD)
rngunif_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_roots_OBJECTS = roots.$(OBJEXT)
roots_OBJECTS = $(am_roots_OBJECTS)
roots_LDADD = $(LDADD)
roots_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_rstat_OBJECTS = rstat.$(OBJEXT)
rstat_OBJECTS = $(am_rstat_OBJECTS)
rstat_LDADD = $(LDADD)
rstat_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_siman_OBJECTS = siman.$(OBJEXT) siman_print.$(OBJEXT)
siman_OBJECTS = $(am_siman_OBJECTS)
siman_LDADD = $(LDADD)
siman_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_splinalg_OBJECTS = splinalg.$(OBJEXT)
splinalg_OBJECTS = $(am_splinalg_OBJECTS)
splinalg_LDADD = $(LDADD)
splinalg_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_spmatrix_OBJECTS = spmatrix.$(OBJEXT)
spmatrix_OBJECTS = $(am_spmatrix_OBJECTS)
spmatrix_LDADD = $(LDADD)
spmatrix_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_stat_OBJECTS = stat.$(OBJEXT)
stat_OBJECTS = $(am_stat_OBJECTS)
stat_LDADD = $(LDADD)
stat_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_statsort_OBJECTS = statsort.$(OBJEXT)
statsort_OBJECTS = $(am_statsort_OBJECTS)
statsort_LDADD = $(LDADD)
statsort_DEPENDENCIES = ${top_builddir}/libfgsl.la \
	$(am__DEPENDENCIES_1)
am_sum_OBJECTS = sum.$(OBJEXT)
sum_OBJECTS = $(am_sum_OBJECTS)
sum_LDADD = $(LDADD)
sum_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
am_vector_OBJECTS = vector.$(OBJEXT)
vector_OBJECTS = $(am_vector_OBJECTS)
vector_LDADD = $(LDADD)
vector_DEPENDENCIES = ${top_builddir}/libfgsl.la $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_@AM_V@)
am__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
SOURCES = $(cdf_SOURCES) $(cheb_SOURCES) $(combination_SOURCES) \
	$(diff_SOURCES) $(dwt_SOURCES) $(eigen_SOURCES) \
	$(eigen_nonsymm_SOURCES) $(error_1_SOURCES) $(error_2_SOURCES) \
	$(error_3_SOURCES) $(error_4_SOURCES) $(fft_SOURCES) \
	$(fitting_SOURCES) $(fitting2_SOURCES) $(fitting3_SOURCES) \
	$(histogram_SOURCES) $(histogram2d_SOURCES) $(ieee_SOURCES) \
	$(ieeeround_SOURCES) $(integration_SOURCES) $(interp_SOURCES) \
	$(interpp_SOURCES) $(intro_SOURCES) $(linalglu_SOURCES) \
	$(matrix_SOURCES) $(min_SOURCES) $(monte_SOURCES) \
	$(multifit_SOURCES) $(nlfit_SOURCES) $(nlfit2_SOURCES) \
	$(nlfit4_SOURCES) $(ntupler_SOURCES) $(ntuplew_SOURCES) \
	$(ode_initval_SOURCES) $(permshuffle_SOURCES) \
	$(permutation_SOURCES) $(polyroots_SOURCES) $(qrng_SOURCES) \
	$(randpoisson_SOURCES) $(randwalk_SOURCES) $(rng_SOURCES) \
	$(rngunif_SOURCES) $(roots_SOURCES) $(rstat_SOURCES) \
	$(siman_SOURCES) $(splinalg_SOURCES) $(spmatrix_SOURCES) \
	$(stat_SOURCES) $(statsort_SOURCES) $(sum_SOURCES) \
	$(vector_SOURCES)
DIST_SOURCES = $(cdf_SOURCES) $(cheb_SOURCES) $(combination_SOURCES) \
	$(diff_SOURCES) $(dwt_SOURCES) $(eigen_SOURCES) \
	$(eigen_nonsymm_SOURCES) $(error_1_SOURCES) $(error_2_SOURCES) \
	$(error_3_SOURCES) $(error_4_SOURCES) $(fft_SOURCES) \
	$(fitting_SOURCES) $(fitting2_SOURCES) $(fitting3_SOURCES) \
	$(histogram_SOURCES) $(histogram2d_SOURCES) $(ieee_SOURCES) \
	$(ieeeround_SOURCES) $(integration_SOURCES) $(interp_SOURCES) \
	$(interpp_SOURCES) $(intro_SOURCES) $(linalglu_SOURCES) \
	$(matrix_SOURCES) $(min_SOURCES) $(monte_SOURCES) \
	$(multifit_SOURCES) $(nlfit_SOURCES) $(nlfit2_SOURCES) \
	$(nlfit4_SOURCES) $(ntupler_SOURCES) $(ntuplew_SOURCES) \
	$(ode_initval_SOURCES) $(permshuffle_SOURCES) \
	$(permutation_SOURCES) $(polyroots_SOURCES) $(qrng_SOURCES) \
	$(randpoisson_SOURCES) $(randwalk_SOURCES) $(rng_SOURCES) \
	$(rngunif_SOURCES) $(roots_SOURCES) $(rstat_SOURCES) \
	$(siman_SOURCES) $(splinalg_SOURCES) $(spmatrix_SOURCES) \
	$(stat_SOURCES) $(statsort_SOURCES) $(sum_SOURCES) \
	$(vector_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(fgsl_exampledir)"
DATA = $(dist_fgsl_example_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_F90 = @FCFLAGS_F90@
FGREP = @FGREP@
FGSL_LDFLAGS = @FGSL_LDFLAGS@
GREP = @GREP@
GSL_VERSION = @GSL_VERSION@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_AGE = @LIB_AGE@
LIB_CURRENT = @LIB_CURRENT@
LIB_REVISION = @LIB_REVISION@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_FCFLAGS = @OPENMP_FCFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gsl_CFLAGS = @gsl_CFLAGS@
gsl_LIBS = @gsl_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I${top_srcdir} -I${top_builddir}
AM_FCFLAGS = -I${top_srcdir} -I${top_builddir}
LDADD = ${top_builddir}/libfgsl.la $(gsl_LIBS)
fgsl_exampledir = $(datadir)/examples/fgsl
cdf_SOURCES = cdf.f90
cheb_SOURCES = cheb.f90
combination_SOURCES = combination.F90
diff_SOURCES = diff.f90
dwt_SOURCES = dwt.F90
dwt_FCFLAGS = -DDWT_DAT="'$(srcdir)/dwt.dat'"
error_1_SOURCES = error_1.f90
error_2_SOURCES = error_2.f90
error_3_SOURCES = error_3.F90
error_4_SOURCES = error_4.f90
fitting_SOURCES = fitting.f90
fitting2_SOURCES = fitting2.f90
fitting3_SOURCES = fitting3.f90
histogram_SOURCES = histogram.F90
histogram_FCFLAGS = -DHISTOGRAM_DAT="'$(srcdir)/histogram.dat'" \
			-DCAUCHY_DAT="'$(srcdir)/cauchy.dat'"

histogram2d_SOURCES = histogram2d.f90
ieee_SOURCES = ieee.f90
ieeeround_SOURCES = ieeeround.f90
integration_SOURCES = integration.f90
interp_SOURCES = interp.f90
interpp_SOURCES = interpp.f90
intro_SOURCES = intro.f90
matrix_SOURCES = matrix.f90
min_SOURCES = min.f90
monte_SOURCES = monte.f90
multifit_SOURCES = multifit.f90
nlfit_SOURCES = nlfit.f90
nlfit2_SOURCES = nlfit2.f90
nlfit4_SOURCES = nlfit4.f90
ntupler_SOURCES = ntupler.f90
ntuplew_SOURCES = ntuplew.f90
linalglu_SOURCES = linalglu.f90
eigen_SOURCES = eigen.f90
eigen_nonsymm_SOURCES = eigen_nonsymm.f90
fft_SOURCES = fft.f90
ode_initval_SOURCES = ode-initval.F90
permutation_SOURCES = permutation.f90
permshuffle_SOURCES = permshuffle.f90
polyroots_SOURCES = polyroots.f90
qrng_SOURCES = qrng.f90
randpoisson_SOURCES = randpoisson.f90
randwalk_SOURCES = randwalk.f90
rng_SOURCES = rng.f90
rngunif_SOURCES = rngunif.f90
roots_SOURCES = roots.f90
siman_SOURCES = siman.f90 siman_print.c
stat_SOURCES = stat.f90
statsort_SOURCES = statsort.f90
sum_SOURCES = sum.f90
vector_SOURCES = vector.f90
spmatrix_SOURCES = spmatrix.f90
splinalg_SOURCES = splinalg.f90
rstat_SOURCES = rstat.f90

#integration_omp_SOURCES = integration_omp.f90
#integration_omp_FCFLAGS = @OPENMP_FCFLAGS@ -I${top_srcdir} -I${top_builddir}
#integration_omp_LDADD =  ${top_builddir}/libfgsl.la
data_files = dwt.dat histogram.dat cauchy.dat
dist_fgsl_example_DATA = $(data_files) cdf.f90 cheb.f90 combination.F90 diff.f90 dwt.F90 \
			error_1.f90 error_2.f90 error_3.F90 error_4.f90 \
			fitting.f90 fitting3.f90 fitting2.f90 histogram.F90 \
			histogram2d.f90 ieee.f90 ieeeround.f90 integration.f90 \
			interp.f90 interpp.f90 intro.f90 matrix.f90 min.f90 monte.f90 \
			nlfit.f90 nlfit2.f90 nlfit4.f90 ntuplew.f90 ntupler.f90 \
			linalglu.f90 eigen.f90 eigen_nonsymm.f90 fft.f90 \
			ode-initval.F90 permutation.f90 permshuffle.f90 \
			polyroots.f90 qrng.f90 randpoisson.f90 randwalk.f90 \
			rng.f90 rngunif.f90 roots.f90 siman.f90 siman_print.c \
			stat.f90 statsort.f90 sum.f90 vector.f90 integration_omp.f90 \
			spmatrix.f90 splinalg.f90 rstat.f90

TESTS = $(check_PROGRAMS)
all: all-am

.SUFFIXES:
.SUFFIXES: .F90 .c .f90 .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign doc/examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

cdf$(EXEEXT): $(cdf_OBJECTS) $(cdf_DEPENDENCIES) $(EXTRA_cdf_DEPENDENCIES) 
	@rm -f cdf$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(cdf_OBJECTS) $(cdf_LDADD) $(LIBS)

cheb$(EXEEXT): $(cheb_OBJECTS) $(cheb_DEPENDENCIES) $(EXTRA_cheb_DEPENDENCIES) 
	@rm -f cheb$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(cheb_OBJECTS) $(cheb_LDADD) $(LIBS)

combination$(EXEEXT): $(combination_OBJECTS) $(combination_DEPENDENCIES) $(EXTRA_combination_DEPENDENCIES) 
	@rm -f combination$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(combination_OBJECTS) $(combination_LDADD) $(LIBS)

diff$(EXEEXT): $(diff_OBJECTS) $(diff_DEPENDENCIES) $(EXTRA_diff_DEPENDENCIES) 
	@rm -f diff$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(diff_OBJECTS) $(diff_LDADD) $(LIBS)

dwt$(EXEEXT): $(dwt_OBJECTS) $(dwt_DEPENDENCIES) $(EXTRA_dwt_DEPENDENCIES) 
	@rm -f dwt$(EXEEXT)
	$(AM_V_FCLD)$(dwt_LINK) $(dwt_OBJECTS) $(dwt_LDADD) $(LIBS)

eigen$(EXEEXT): $(eigen_OBJECTS) $(eigen_DEPENDENCIES) $(EXTRA_eigen_DEPENDENCIES) 
	@rm -f eigen$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(eigen_OBJECTS) $(eigen_LDADD) $(LIBS)

eigen_nonsymm$(EXEEXT): $(eigen_nonsymm_OBJECTS) $(eigen_nonsymm_DEPENDENCIES) $(EXTRA_eigen_nonsymm_DEPENDENCIES) 
	@rm -f eigen_nonsymm$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(eigen_nonsymm_OBJECTS) $(eigen_nonsymm_LDADD) $(LIBS)

error_1$(EXEEXT): $(error_1_OBJECTS) $(error_1_DEPENDENCIES) $(EXTRA_error_1_DEPENDENCIES) 
	@rm -f error_1$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(error_1_OBJECTS) $(error_1_LDADD) $(LIBS)

error_2$(EXEEXT): $(error_2_OBJECTS) $(error_2_DEPENDENCIES) $(EXTRA_error_2_DEPENDENCIES) 
	@rm -f error_2$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(error_2_OBJECTS) $(error_2_LDADD) $(LIBS)

error_3$(EXEEXT): $(error_3_OBJECTS) $(error_3_DEPENDENCIES) $(EXTRA_error_3_DEPENDENCIES) 
	@rm -f error_3$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(error_3_OBJECTS) $(error_3_LDADD) $(LIBS)

error_4$(EXEEXT): $(error_4_OBJECTS) $(error_4_DEPENDENCIES) $(EXTRA_error_4_DEPENDENCIES) 
	@rm -f error_4$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(error_4_OBJECTS) $(error_4_LDADD) $(LIBS)

fft$(EXEEXT): $(fft_OBJECTS) $(fft_DEPENDENCIES) $(EXTRA_fft_DEPENDENCIES) 
	@rm -f fft$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fft_OBJECTS) $(fft_LDADD) $(LIBS)

fitting$(EXEEXT): $(fitting_OBJECTS) $(fitting_DEPENDENCIES) $(EXTRA_fitting_DEPENDENCIES) 
	@rm -f fitting$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fitting_OBJECTS) $(fitting_LDADD) $(LIBS)

fitting2$(EXEEXT): $(fitting2_OBJECTS) $(fitting2_DEPENDENCIES) $(EXTRA_fitting2_DEPENDENCIES) 
	@rm -f fitting2$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fitting2_OBJECTS) $(fitting2_LDADD) $(LIBS)

fitting3$(EXEEXT): $(fitting3_OBJECTS) $(fitting3_DEPENDENCIES) $(EXTRA_fitting3_DEPENDENCIES) 
	@rm -f fitting3$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fitting3_OBJECTS) $(fitting3_LDADD) $(LIBS)

histogram$(EXEEXT): $(histogram_OBJECTS) $(histogram_DEPENDENCIES) $(EXTRA_histogram_DEPENDENCIES) 
	@rm -f histogram$(EXEEXT)
	$(AM_V_FCLD)$(histogram_LINK) $(histogram_OBJECTS) $(histogram_LDADD) $(LIBS)

histogram2d$(EXEEXT): $(histogram2d_OBJECTS) $(histogram2d_DEPENDENCIES) $(EXTRA_histogram2d_DEPENDENCIES) 
	@rm -f histogram2d$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(histogram2d_OBJECTS) $(histogram2d_LDADD) $(LIBS)

ieee$(EXEEXT): $(ieee_OBJECTS) $(ieee_DEPENDENCIES) $(EXTRA_ieee_DEPENDENCIES) 
	@rm -f ieee$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ieee_OBJECTS) $(ieee_LDADD) $(LIBS)

ieeeround$(EXEEXT): $(ieeeround_OBJECTS) $(ieeeround_DEPENDENCIES) $(EXTRA_ieeeround_DEPENDENCIES) 
	@rm -f ieeeround$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ieeeround_OBJECTS) $(ieeeround_LDADD) $(LIBS)

integration$(EXEEXT): $(integration_OBJECTS) $(integration_DEPENDENCIES) $(EXTRA_integration_DEPENDENCIES) 
	@rm -f integration$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(integration_OBJECTS) $(integration_LDADD) $(LIBS)

interp$(EXEEXT): $(interp_OBJECTS) $(interp_DEPENDENCIES) $(EXTRA_interp_DEPENDENCIES) 
	@rm -f interp$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(interp_OBJECTS) $(interp_LDADD) $(LIBS)

interpp$(EXEEXT): $(interpp_OBJECTS) $(interpp_DEPENDENCIES) $(EXTRA_interpp_DEPENDENCIES) 
	@rm -f interpp$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(interpp_OBJECTS) $(interpp_LDADD) $(LIBS)

intro$(EXEEXT): $(intro_OBJECTS) $(intro_DEPENDENCIES) $(EXTRA_intro_DEPENDENCIES) 
	@rm -f intro$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(intro_OBJECTS) $(intro_LDADD) $(LIBS)

linalglu$(EXEEXT): $(linalglu_OBJECTS) $(linalglu_DEPENDENCIES) $(EXTRA_linalglu_DEPENDENCIES) 
	@rm -f linalglu$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(linalglu_OBJECTS) $(linalglu_LDADD) $(LIBS)

matrix$(EXEEXT): $(matrix_OBJECTS) $(matrix_DEPENDENCIES) $(EXTRA_matrix_DEPENDENCIES) 
	@rm -f matrix$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(matrix_OBJECTS) $(matrix_LDADD) $(LIBS)

min$(EXEEXT): $(min_OBJECTS) $(min_DEPENDENCIES) $(EXTRA_min_DEPENDENCIES) 
	@rm -f min$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(min_OBJECTS) $(min_LDADD) $(LIBS)

monte$(EXEEXT): $(monte_OBJECTS) $(monte_DEPENDENCIES) $(EXTRA_monte_DEPENDENCIES) 
	@rm -f monte$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(monte_OBJECTS) $(monte_LDADD) $(LIBS)

multifit$(EXEEXT): $(multifit_OBJECTS) $(multifit_DEPENDENCIES) $(EXTRA_multifit_DEPENDENCIES) 
	@rm -f multifit$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(multifit_OBJECTS) $(multifit_LDADD) $(LIBS)

nlfit$(EXEEXT): $(nlfit_OBJECTS) $(nlfit_DEPENDENCIES) $(EXTRA_nlfit_DEPENDENCIES) 
	@rm -f nlfit$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(nlfit_OBJECTS) $(nlfit_LDADD) $(LIBS)

nlfit2$(EXEEXT): $(nlfit2_OBJECTS) $(nlfit2_DEPENDENCIES) $(EXTRA_nlfit2_DEPENDENCIES) 
	@rm -f nlfit2$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(nlfit2_OBJECTS) $(nlfit2_LDADD) $(LIBS)

nlfit4$(EXEEXT): $(nlfit4_OBJECTS) $(nlfit4_DEPENDENCIES) $(EXTRA_nlfit4_DEPENDENCIES) 
	@rm -f nlfit4$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(nlfit4_OBJECTS) $(nlfit4_LDADD) $(LIBS)

ntupler$(EXEEXT): $(ntupler_OBJECTS) $(ntupler_DEPENDENCIES) $(EXTRA_ntupler_DEPENDENCIES) 
	@rm -f ntupler$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ntupler_OBJECTS) $(ntupler_LDADD) $(LIBS)

ntuplew$(EXEEXT): $(ntuplew_OBJECTS) $(ntuplew_DEPENDENCIES) $(EXTRA_ntuplew_DEPENDENCIES) 
	@rm -f ntuplew$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ntuplew_OBJECTS) $(ntuplew_LDADD) $(LIBS)

ode-initval$(EXEEXT): $(ode_initval_OBJECTS) $(ode_initval_DEPENDENCIES) $(EXTRA_ode_initval_DEPENDENCIES) 
	@rm -f ode-initval$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ode_initval_OBJECTS) $(ode_initval_LDADD) $(LIBS)

permshuffle$(EXEEXT): $(permshuffle_OBJECTS) $(permshuffle_DEPENDENCIES) $(EXTRA_permshuffle_DEPENDENCIES) 
	@rm -f permshuffle$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(permshuffle_OBJECTS) $(permshuffle_LDADD) $(LIBS)

permutation$(EXEEXT): $(permutation_OBJECTS) $(permutation_DEPENDENCIES) $(EXTRA_permutation_DEPENDENCIES) 
	@rm -f permutation$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(permutation_OBJECTS) $(permutation_LDADD) $(LIBS)

polyroots$(EXEEXT): $(polyroots_OBJECTS) $(polyroots_DEPENDENCIES) $(EXTRA_polyroots_DEPENDENCIES) 
	@rm -f polyroots$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(polyroots_OBJECTS) $(polyroots_LDADD) $(LIBS)

qrng$(EXEEXT): $(qrng_OBJECTS) $(qrng_DEPENDENCIES) $(EXTRA_qrng_DEPENDENCIES) 
	@rm -f qrng$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(qrng_OBJECTS) $(qrng_LDADD) $(LIBS)

randpoisson$(EXEEXT): $(randpoisson_OBJECTS) $(randpoisson_DEPENDENCIES) $(EXTRA_randpoisson_DEPENDENCIES) 
	@rm -f randpoisson$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(randpoisson_OBJECTS) $(randpoisson_LDADD) $(LIBS)

randwalk$(EXEEXT): $(randwalk_OBJECTS) $(randwalk_DEPENDENCIES) $(EXTRA_randwalk_DEPENDENCIES) 
	@rm -f randwalk$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(randwalk_OBJECTS) $(randwalk_LDADD) $(LIBS)

rng$(EXEEXT): $(rng_OBJECTS) $(rng_DEPENDENCIES) $(EXTRA_rng_DEPENDENCIES) 
	@rm -f rng$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(rng_OBJECTS) $(rng_LDADD) $(LIBS)

rngunif$(EXEEXT): $(rngunif_OBJECTS) $(rngunif_DEPENDENCIES) $(EXTRA_rngunif_DEPENDENCIES) 
	@rm -f rngunif$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(rngunif_OBJECTS) $(rngunif_LDADD) $(LIBS)

roots$(EXEEXT): $(roots_OBJECTS) $(roots_DEPENDENCIES) $(EXTRA_roots_DEPENDENCIES) 
	@rm -f roots$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(roots_OBJECTS) $(roots_LDADD) $(LIBS)

rstat$(EXEEXT): $(rstat_OBJECTS) $(rstat_DEPENDENCIES) $(EXTRA_rstat_DEPENDENCIES) 
	@rm -f rstat$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(rstat_OBJECTS) $(rstat_LDADD) $(LIBS)

siman$(EXEEXT): $(siman_OBJECTS) $(siman_DEPENDENCIES) $(EXTRA_siman_DEPENDENCIES) 
	@rm -f siman$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(siman_OBJECTS) $(siman_LDADD) $(LIBS)

splinalg$(EXEEXT): $(splinalg_OBJECTS) $(splinalg_DEPENDENCIES) $(EXTRA_splinalg_DEPENDENCIES) 
	@rm -f splinalg$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(splinalg_OBJECTS) $(splinalg_LDADD) $(LIBS)

spmatrix$(EXEEXT): $(spmatrix_OBJECTS) $(spmatrix_DEPENDENCIES) $(EXTRA_spmatrix_DEPENDENCIES) 
	@rm -f spmatrix$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(spmatrix_OBJECTS) $(spmatrix_LDADD) $(LIBS)

stat$(EXEEXT): $(stat_OBJECTS) $(stat_DEPENDENCIES) $(EXTRA_stat_DEPENDENCIES) 
	@rm -f stat$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(stat_OBJECTS) $(stat_LDADD) $(LIBS)

statsort$(EXEEXT): $(statsort_OBJECTS) $(statsort_DEPENDENCIES) $(EXTRA_statsort_DEPENDENCIES) 
	@rm -f statsort$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(statsort_OBJECTS) $(statsort_LDADD) $(LIBS)

sum$(EXEEXT): $(sum_OBJECTS) $(sum_DEPENDENCIES) $(EXTRA_sum_DEPENDENCIES) 
	@rm -f sum$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(sum_OBJECTS) $(sum_LDADD) $(LIBS)

vector$(EXEEXT): $(vector_OBJECTS) $(vector_DEPENDENCIES) $(EXTRA_vector_DEPENDENCIES) 
	@rm -f vector$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(vector_OBJECTS) $(vector_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/siman_print.Po@am__quote@

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

dwt-dwt.o: dwt.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwt_FCFLAGS) $(FCFLAGS) -c -o dwt-dwt.o `test -f 'dwt.F90' || echo '$(srcdir)/'`dwt.F90

dwt-dwt.obj: dwt.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dwt_FCFLAGS) $(FCFLAGS) -c -o dwt-dwt.obj `if test -f 'dwt.F90'; then $(CYGPATH_W) 'dwt.F90'; else $(CYGPATH_W) '$(srcdir)/dwt.F90'; fi`

histogram-histogram.o: histogram.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(histogram_FCFLAGS) $(FCFLAGS) -c -o histogram-histogram.o `test -f 'histogram.F90' || echo '$(srcdir)/'`histogram.F90

histogram-histogram.obj: histogram.F90
	$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(histogram_FCFLAGS) $(FCFLAGS) -c -o histogram-histogram.obj `if test -f 'histogram.F90'; then $(CYGPATH_W) 'histogram.F90'; else $(CYGPATH_W) '$(srcdir)/histogram.F90'; fi`

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_fgsl_exampleDATA: $(dist_fgsl_example_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_fgsl_example_DATA)'; test -n "$(fgsl_exampledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(fgsl_exampledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(fgsl_exampledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fgsl_exampledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fgsl_exampledir)" || exit $$?; \
	done

uninstall-dist_fgsl_exampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_fgsl_example_DATA)'; test -n "$(fgsl_exampledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(fgsl_exampledir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
cdf.log: cdf$(EXEEXT)
	@p='cdf$(EXEEXT)'; \
	b='cdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cheb.log: cheb$(EXEEXT)
	@p='cheb$(EXEEXT)'; \
	b='cheb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
combination.log: combination$(EXEEXT)
	@p='combination$(EXEEXT)'; \
	b='combination'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
diff.log: diff$(EXEEXT)
	@p='diff$(EXEEXT)'; \
	b='diff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
dwt.log: dwt$(EXEEXT)
	@p='dwt$(EXEEXT)'; \
	b='dwt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error_1.log: error_1$(EXEEXT)
	@p='error_1$(EXEEXT)'; \
	b='error_1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error_2.log: error_2$(EXEEXT)
	@p='error_2$(EXEEXT)'; \
	b='error_2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error_3.log: error_3$(EXEEXT)
	@p='error_3$(EXEEXT)'; \
	b='error_3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error_4.log: error_4$(EXEEXT)
	@p='error_4$(EXEEXT)'; \
	b='error_4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fitting.log: fitting$(EXEEXT)
	@p='fitting$(EXEEXT)'; \
	b='fitting'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fitting3.log: fitting3$(EXEEXT)
	@p='fitting3$(EXEEXT)'; \
	b='fitting3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fitting2.log: fitting2$(EXEEXT)
	@p='fitting2$(EXEEXT)'; \
	b='fitting2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
histogram.log: histogram$(EXEEXT)
	@p='histogram$(EXEEXT)'; \
	b='histogram'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
histogram2d.log: histogram2d$(EXEEXT)
	@p='histogram2d$(EXEEXT)'; \
	b='histogram2d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ieee.log: ieee$(EXEEXT)
	@p='ieee$(EXEEXT)'; \
	b='ieee'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ieeeround.log: ieeeround$(EXEEXT)
	@p='ieeeround$(EXEEXT)'; \
	b='ieeeround'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
integration.log: integration$(EXEEXT)
	@p='integration$(EXEEXT)'; \
	b='integration'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interp.log: interp$(EXEEXT)
	@p='interp$(EXEEXT)'; \
	b='interp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interpp.log: interpp$(EXEEXT)
	@p='interpp$(EXEEXT)'; \
	b='interpp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
intro.log: intro$(EXEEXT)
	@p='intro$(EXEEXT)'; \
	b='intro'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
matrix.log: matrix$(EXEEXT)
	@p='matrix$(EXEEXT)'; \
	b='matrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
min.log: min$(EXEEXT)
	@p='min$(EXEEXT)'; \
	b='min'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
monte.log: monte$(EXEEXT)
	@p='monte$(EXEEXT)'; \
	b='monte'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
multifit.log: multifit$(EXEEXT)
	@p='multifit$(EXEEXT)'; \
	b='multifit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nlfit.log: nlfit$(EXEEXT)
	@p='nlfit$(EXEEXT)'; \
	b='nlfit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nlfit2.log: nlfit2$(EXEEXT)
	@p='nlfit2$(EXEEXT)'; \
	b='nlfit2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nlfit4.log: nlfit4$(EXEEXT)
	@p='nlfit4$(EXEEXT)'; \
	b='nlfit4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ntuplew.log: ntuplew$(EXEEXT)
	@p='ntuplew$(EXEEXT)'; \
	b='ntuplew'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ntupler.log: ntupler$(EXEEXT)
	@p='ntupler$(EXEEXT)'; \
	b='ntupler'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
linalglu.log: linalglu$(EXEEXT)
	@p='linalglu$(EXEEXT)'; \
	b='linalglu'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
eigen.log: eigen$(EXEEXT)
	@p='eigen$(EXEEXT)'; \
	b='eigen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
eigen_nonsymm.log: eigen_nonsymm$(EXEEXT)
	@p='eigen_nonsymm$(EXEEXT)'; \
	b='eigen_nonsymm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fft.log: fft$(EXEEXT)
	@p='fft$(EXEEXT)'; \
	b='fft'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ode-initval.log: ode-initval$(EXEEXT)
	@p='ode-initval$(EXEEXT)'; \
	b='ode-initval'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
permutation.log: permutation$(EXEEXT)
	@p='permutation$(EXEEXT)'; \
	b='permutation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
permshuffle.log: permshuffle$(EXEEXT)
	@p='permshuffle$(EXEEXT)'; \
	b='permshuffle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
polyroots.log: polyroots$(EXEEXT)
	@p='polyroots$(EXEEXT)'; \
	b='polyroots'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
qrng.log: qrng$(EXEEXT)
	@p='qrng$(EXEEXT)'; \
	b='qrng'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
randpoisson.log: randpoisson$(EXEEXT)
	@p='randpoisson$(EXEEXT)'; \
	b='randpoisson'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
randwalk.log: randwalk$(EXEEXT)
	@p='randwalk$(EXEEXT)'; \
	b='randwalk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rng.log: rng$(EXEEXT)
	@p='rng$(EXEEXT)'; \
	b='rng'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rngunif.log: rngunif$(EXEEXT)
	@p='rngunif$(EXEEXT)'; \
	b='rngunif'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
roots.log: roots$(EXEEXT)
	@p='roots$(EXEEXT)'; \
	b='roots'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
siman.log: siman$(EXEEXT)
	@p='siman$(EXEEXT)'; \
	b='siman'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
stat.log: stat$(EXEEXT)
	@p='stat$(EXEEXT)'; \
	b='stat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
statsort.log: statsort$(EXEEXT)
	@p='statsort$(EXEEXT)'; \
	b='statsort'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sum.log: sum$(EXEEXT)
	@p='sum$(EXEEXT)'; \
	b='sum'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
vector.log: vector$(EXEEXT)
	@p='vector$(EXEEXT)'; \
	b='vector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spmatrix.log: spmatrix$(EXEEXT)
	@p='spmatrix$(EXEEXT)'; \
	b='spmatrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
splinalg.log: splinalg$(EXEEXT)
	@p='splinalg$(EXEEXT)'; \
	b='splinalg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rstat.log: rstat$(EXEEXT)
	@p='rstat$(EXEEXT)'; \
	b='rstat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(fgsl_exampledir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_fgsl_exampleDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_fgsl_exampleDATA

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dist_fgsl_exampleDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-dist_fgsl_exampleDATA


clean-local:
	rm -rf *mod fitting2.dat test.dat

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
