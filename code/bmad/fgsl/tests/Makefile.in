# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = poly$(EXEEXT) interp$(EXEEXT) specfunc$(EXEEXT) \
	permutation$(EXEEXT) integration$(EXEEXT) sort$(EXEEXT) \
	array$(EXEEXT) linalg$(EXEEXT) eigen$(EXEEXT) fft$(EXEEXT) \
	rng$(EXEEXT) histogram$(EXEEXT) statistics$(EXEEXT) \
	ntuple$(EXEEXT) siman$(EXEEXT) ode$(EXEEXT) deriv$(EXEEXT) \
	roots$(EXEEXT) minim$(EXEEXT) multiroots$(EXEEXT) \
	montecarlo$(EXEEXT) bspline$(EXEEXT) multimin$(EXEEXT) \
	fit$(EXEEXT) nlfit$(EXEEXT) version$(EXEEXT) \
	chebyshev$(EXEEXT) error$(EXEEXT) ieee_utils$(EXEEXT) \
	math$(EXEEXT) interp2d$(EXEEXT)
XFAIL_TESTS = error$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_array_OBJECTS = array.$(OBJEXT) mod_unit.$(OBJEXT)
array_OBJECTS = $(am_array_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = ../libfgsl.la $(am__DEPENDENCIES_1)
array_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_bspline_OBJECTS = bspline.$(OBJEXT) mod_unit.$(OBJEXT)
bspline_OBJECTS = $(am_bspline_OBJECTS)
bspline_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_chebyshev_OBJECTS = chebyshev.$(OBJEXT) mod_unit.$(OBJEXT)
chebyshev_OBJECTS = $(am_chebyshev_OBJECTS)
chebyshev_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_deriv_OBJECTS = deriv.$(OBJEXT) mod_unit.$(OBJEXT)
deriv_OBJECTS = $(am_deriv_OBJECTS)
deriv_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_eigen_OBJECTS = eigen.$(OBJEXT) mod_unit.$(OBJEXT)
eigen_OBJECTS = $(am_eigen_OBJECTS)
eigen_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_error_OBJECTS = error.$(OBJEXT) mod_unit.$(OBJEXT)
error_OBJECTS = $(am_error_OBJECTS)
error_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_fft_OBJECTS = fft.$(OBJEXT) mod_unit.$(OBJEXT)
fft_OBJECTS = $(am_fft_OBJECTS)
fft_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_fit_OBJECTS = fit.$(OBJEXT) mod_unit.$(OBJEXT)
fit_OBJECTS = $(am_fit_OBJECTS)
fit_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_histogram_OBJECTS = histogram.$(OBJEXT) mod_unit.$(OBJEXT)
histogram_OBJECTS = $(am_histogram_OBJECTS)
histogram_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ieee_utils_OBJECTS = ieee_utils.$(OBJEXT) mod_unit.$(OBJEXT)
ieee_utils_OBJECTS = $(am_ieee_utils_OBJECTS)
ieee_utils_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_integration_OBJECTS = integration.$(OBJEXT) mod_unit.$(OBJEXT)
integration_OBJECTS = $(am_integration_OBJECTS)
integration_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_interp_OBJECTS = mod_unit.$(OBJEXT) interp.$(OBJEXT)
interp_OBJECTS = $(am_interp_OBJECTS)
interp_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_interp2d_OBJECTS = interp2d.$(OBJEXT) mod_unit.$(OBJEXT)
interp2d_OBJECTS = $(am_interp2d_OBJECTS)
interp2d_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_linalg_OBJECTS = linalg.$(OBJEXT) mod_unit.$(OBJEXT)
linalg_OBJECTS = $(am_linalg_OBJECTS)
linalg_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_math_OBJECTS = math.$(OBJEXT) mod_unit.$(OBJEXT)
math_OBJECTS = $(am_math_OBJECTS)
math_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_minim_OBJECTS = minim.$(OBJEXT) mod_unit.$(OBJEXT)
minim_OBJECTS = $(am_minim_OBJECTS)
minim_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_montecarlo_OBJECTS = montecarlo.$(OBJEXT) mod_unit.$(OBJEXT)
montecarlo_OBJECTS = $(am_montecarlo_OBJECTS)
montecarlo_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_multimin_OBJECTS = multimin.$(OBJEXT) mod_unit.$(OBJEXT)
multimin_OBJECTS = $(am_multimin_OBJECTS)
multimin_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_multiroots_OBJECTS = multiroots.$(OBJEXT) mod_unit.$(OBJEXT)
multiroots_OBJECTS = $(am_multiroots_OBJECTS)
multiroots_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_nlfit_OBJECTS = nlfit.$(OBJEXT) mod_unit.$(OBJEXT)
nlfit_OBJECTS = $(am_nlfit_OBJECTS)
nlfit_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ntuple_OBJECTS = ntuple.$(OBJEXT) mod_unit.$(OBJEXT)
ntuple_OBJECTS = $(am_ntuple_OBJECTS)
ntuple_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ode_OBJECTS = ode.$(OBJEXT) mod_unit.$(OBJEXT)
ode_OBJECTS = $(am_ode_OBJECTS)
ode_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_permutation_OBJECTS = permutation.$(OBJEXT) mod_unit.$(OBJEXT)
permutation_OBJECTS = $(am_permutation_OBJECTS)
permutation_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_poly_OBJECTS = mod_unit.$(OBJEXT) poly.$(OBJEXT)
poly_OBJECTS = $(am_poly_OBJECTS)
poly_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_rng_OBJECTS = rng.$(OBJEXT) mod_unit.$(OBJEXT)
rng_OBJECTS = $(am_rng_OBJECTS)
rng_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_roots_OBJECTS = roots.$(OBJEXT) mod_unit.$(OBJEXT)
roots_OBJECTS = $(am_roots_OBJECTS)
roots_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_siman_OBJECTS = siman.$(OBJEXT) mod_unit.$(OBJEXT)
siman_OBJECTS = $(am_siman_OBJECTS)
siman_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_sort_OBJECTS = sort.$(OBJEXT) mod_unit.$(OBJEXT)
sort_OBJECTS = $(am_sort_OBJECTS)
sort_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_specfunc_OBJECTS = specfunc.$(OBJEXT) mod_unit.$(OBJEXT)
specfunc_OBJECTS = $(am_specfunc_OBJECTS)
specfunc_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_statistics_OBJECTS = statistics.$(OBJEXT) mod_unit.$(OBJEXT)
statistics_OBJECTS = $(am_statistics_OBJECTS)
statistics_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_version_OBJECTS = version.$(OBJEXT) mod_unit.$(OBJEXT)
version_OBJECTS = $(am_version_OBJECTS)
version_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_@AM_V@)
am__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_@AM_V@)
am__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(array_SOURCES) $(bspline_SOURCES) $(chebyshev_SOURCES) \
	$(deriv_SOURCES) $(eigen_SOURCES) $(error_SOURCES) \
	$(fft_SOURCES) $(fit_SOURCES) $(histogram_SOURCES) \
	$(ieee_utils_SOURCES) $(integration_SOURCES) $(interp_SOURCES) \
	$(interp2d_SOURCES) $(linalg_SOURCES) $(math_SOURCES) \
	$(minim_SOURCES) $(montecarlo_SOURCES) $(multimin_SOURCES) \
	$(multiroots_SOURCES) $(nlfit_SOURCES) $(ntuple_SOURCES) \
	$(ode_SOURCES) $(permutation_SOURCES) $(poly_SOURCES) \
	$(rng_SOURCES) $(roots_SOURCES) $(siman_SOURCES) \
	$(sort_SOURCES) $(specfunc_SOURCES) $(statistics_SOURCES) \
	$(version_SOURCES)
DIST_SOURCES = $(array_SOURCES) $(bspline_SOURCES) \
	$(chebyshev_SOURCES) $(deriv_SOURCES) $(eigen_SOURCES) \
	$(error_SOURCES) $(fft_SOURCES) $(fit_SOURCES) \
	$(histogram_SOURCES) $(ieee_utils_SOURCES) \
	$(integration_SOURCES) $(interp_SOURCES) $(interp2d_SOURCES) \
	$(linalg_SOURCES) $(math_SOURCES) $(minim_SOURCES) \
	$(montecarlo_SOURCES) $(multimin_SOURCES) \
	$(multiroots_SOURCES) $(nlfit_SOURCES) $(ntuple_SOURCES) \
	$(ode_SOURCES) $(permutation_SOURCES) $(poly_SOURCES) \
	$(rng_SOURCES) $(roots_SOURCES) $(siman_SOURCES) \
	$(sort_SOURCES) $(specfunc_SOURCES) $(statistics_SOURCES) \
	$(version_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_F90 = @FCFLAGS_F90@
FGREP = @FGREP@
FGSL_LDFLAGS = @FGSL_LDFLAGS@
GREP = @GREP@
GSL_VERSION = @GSL_VERSION@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_AGE = @LIB_AGE@
LIB_CURRENT = @LIB_CURRENT@
LIB_REVISION = @LIB_REVISION@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_FCFLAGS = @OPENMP_FCFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gsl_CFLAGS = @gsl_CFLAGS@
gsl_LIBS = @gsl_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I${top_srcdir} -I${top_builddir}
AM_FCFLAGS = -I${top_srcdir} -I${top_builddir}
BUILT_SOURCES = mod_unit.mod
SHARED_LDADD = ../libfgsl.la $(gsl_LIBS)
poly_SOURCES = mod_unit.f90 mod_unit.mod poly.F90
poly_LDADD = $(SHARED_LDADD)
interp_SOURCES = mod_unit.f90 mod_unit.mod interp.f90
interp_LDADD = $(SHARED_LDADD)
specfunc_SOURCES = specfunc.f90 mod_unit.f90 mod_unit.mod
specfunc_LDADD = $(SHARED_LDADD)
permutation_SOURCES = permutation.F90 mod_unit.f90 mod_unit.mod
permutation_LDADD = $(SHARED_LDADD)
integration_SOURCES = integration.F90 mod_unit.f90 mod_unit.mod
integration_LDADD = $(SHARED_LDADD)
sort_SOURCES = sort.F90 mod_unit.f90 mod_unit.mod
sort_LDADD = $(SHARED_LDADD)
array_SOURCES = array.f90 mod_unit.f90 mod_unit.mod
array_LDADD = $(SHARED_LDADD)
linalg_SOURCES = linalg.F90 mod_unit.f90 mod_unit.mod
linalg_LDADD = $(SHARED_LDADD)
eigen_SOURCES = eigen.f90 mod_unit.f90 mod_unit.mod
eigen_LDADD = $(SHARED_LDADD)
fft_SOURCES = fft.f90 mod_unit.f90 mod_unit.mod
fft_LDADD = $(SHARED_LDADD)
rng_SOURCES = rng.f90 mod_unit.f90 mod_unit.mod
rng_LDADD = $(SHARED_LDADD)
histogram_SOURCES = histogram.f90 mod_unit.f90 mod_unit.mod
histogram_LDADD = $(SHARED_LDADD)
statistics_SOURCES = statistics.F90 mod_unit.f90 mod_unit.mod
statistics_LDADD = $(SHARED_LDADD)
ntuple_SOURCES = ntuple.f90 mod_unit.f90 mod_unit.mod
ntuple_LDADD = $(SHARED_LDADD)
siman_SOURCES = siman.f90 mod_unit.f90 mod_unit.mod
siman_LDADD = $(SHARED_LDADD)
ode_SOURCES = ode.f90 mod_unit.f90 mod_unit.mod
ode_LDADD = $(SHARED_LDADD)
deriv_SOURCES = deriv.f90 mod_unit.f90 mod_unit.mod
deriv_LDADD = $(SHARED_LDADD)
roots_SOURCES = roots.f90 mod_unit.f90 mod_unit.mod
roots_LDADD = $(SHARED_LDADD)
minim_SOURCES = minim.f90 mod_unit.f90 mod_unit.mod
minim_LDADD = $(SHARED_LDADD)
multiroots_SOURCES = multiroots.f90 mod_unit.f90 mod_unit.mod
multiroots_LDADD = $(SHARED_LDADD)
montecarlo_SOURCES = montecarlo.f90 mod_unit.f90 mod_unit.mod
montecarlo_LDADD = $(SHARED_LDADD)
bspline_SOURCES = bspline.f90 mod_unit.f90 mod_unit.mod
bspline_LDADD = $(SHARED_LDADD)
ieee_utils_SOURCES = ieee_utils.f90 mod_unit.f90 mod_unit.mod
ieee_utils_LDADD = $(SHARED_LDADD)
multimin_SOURCES = multimin.f90 mod_unit.f90 mod_unit.mod
multimin_LDADD = $(SHARED_LDADD)
fit_SOURCES = fit.F90 mod_unit.f90 mod_unit.mod
fit_LDADD = $(SHARED_LDADD)
nlfit_SOURCES = nlfit.F90 mod_unit.f90 mod_unit.mod
nlfit_LDADD = $(SHARED_LDADD)
version_SOURCES = version.f90 mod_unit.f90 mod_unit.mod
version_LDADD = $(SHARED_LDADD)
error_SOURCES = error.F90 mod_unit.f90 mod_unit.mod
error_LDADD = $(SHARED_LDADD)
chebyshev_SOURCES = chebyshev.f90 mod_unit.f90 mod_unit.mod
chebyshev_LDADD = $(SHARED_LDADD)
math_SOURCES = math.f90 mod_unit.f90 mod_unit.mod
math_LDADD = $(SHARED_LDADD)
interp2d_SOURCES = interp2d.f90 mod_unit.f90 mod_unit.mod
interp2d_LDADD = $(SHARED_LDADD)
TESTS = $(check_PROGRAMS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F90 .f90 .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) $(EXTRA_array_DEPENDENCIES) 
	@rm -f array$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(array_OBJECTS) $(array_LDADD) $(LIBS)

bspline$(EXEEXT): $(bspline_OBJECTS) $(bspline_DEPENDENCIES) $(EXTRA_bspline_DEPENDENCIES) 
	@rm -f bspline$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(bspline_OBJECTS) $(bspline_LDADD) $(LIBS)

chebyshev$(EXEEXT): $(chebyshev_OBJECTS) $(chebyshev_DEPENDENCIES) $(EXTRA_chebyshev_DEPENDENCIES) 
	@rm -f chebyshev$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(chebyshev_OBJECTS) $(chebyshev_LDADD) $(LIBS)

deriv$(EXEEXT): $(deriv_OBJECTS) $(deriv_DEPENDENCIES) $(EXTRA_deriv_DEPENDENCIES) 
	@rm -f deriv$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(deriv_OBJECTS) $(deriv_LDADD) $(LIBS)

eigen$(EXEEXT): $(eigen_OBJECTS) $(eigen_DEPENDENCIES) $(EXTRA_eigen_DEPENDENCIES) 
	@rm -f eigen$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(eigen_OBJECTS) $(eigen_LDADD) $(LIBS)

error$(EXEEXT): $(error_OBJECTS) $(error_DEPENDENCIES) $(EXTRA_error_DEPENDENCIES) 
	@rm -f error$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(error_OBJECTS) $(error_LDADD) $(LIBS)

fft$(EXEEXT): $(fft_OBJECTS) $(fft_DEPENDENCIES) $(EXTRA_fft_DEPENDENCIES) 
	@rm -f fft$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fft_OBJECTS) $(fft_LDADD) $(LIBS)

fit$(EXEEXT): $(fit_OBJECTS) $(fit_DEPENDENCIES) $(EXTRA_fit_DEPENDENCIES) 
	@rm -f fit$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fit_OBJECTS) $(fit_LDADD) $(LIBS)

histogram$(EXEEXT): $(histogram_OBJECTS) $(histogram_DEPENDENCIES) $(EXTRA_histogram_DEPENDENCIES) 
	@rm -f histogram$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(histogram_OBJECTS) $(histogram_LDADD) $(LIBS)

ieee_utils$(EXEEXT): $(ieee_utils_OBJECTS) $(ieee_utils_DEPENDENCIES) $(EXTRA_ieee_utils_DEPENDENCIES) 
	@rm -f ieee_utils$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ieee_utils_OBJECTS) $(ieee_utils_LDADD) $(LIBS)

integration$(EXEEXT): $(integration_OBJECTS) $(integration_DEPENDENCIES) $(EXTRA_integration_DEPENDENCIES) 
	@rm -f integration$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(integration_OBJECTS) $(integration_LDADD) $(LIBS)

interp$(EXEEXT): $(interp_OBJECTS) $(interp_DEPENDENCIES) $(EXTRA_interp_DEPENDENCIES) 
	@rm -f interp$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(interp_OBJECTS) $(interp_LDADD) $(LIBS)

interp2d$(EXEEXT): $(interp2d_OBJECTS) $(interp2d_DEPENDENCIES) $(EXTRA_interp2d_DEPENDENCIES) 
	@rm -f interp2d$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(interp2d_OBJECTS) $(interp2d_LDADD) $(LIBS)

linalg$(EXEEXT): $(linalg_OBJECTS) $(linalg_DEPENDENCIES) $(EXTRA_linalg_DEPENDENCIES) 
	@rm -f linalg$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(linalg_OBJECTS) $(linalg_LDADD) $(LIBS)

math$(EXEEXT): $(math_OBJECTS) $(math_DEPENDENCIES) $(EXTRA_math_DEPENDENCIES) 
	@rm -f math$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(math_OBJECTS) $(math_LDADD) $(LIBS)

minim$(EXEEXT): $(minim_OBJECTS) $(minim_DEPENDENCIES) $(EXTRA_minim_DEPENDENCIES) 
	@rm -f minim$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(minim_OBJECTS) $(minim_LDADD) $(LIBS)

montecarlo$(EXEEXT): $(montecarlo_OBJECTS) $(montecarlo_DEPENDENCIES) $(EXTRA_montecarlo_DEPENDENCIES) 
	@rm -f montecarlo$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(montecarlo_OBJECTS) $(montecarlo_LDADD) $(LIBS)

multimin$(EXEEXT): $(multimin_OBJECTS) $(multimin_DEPENDENCIES) $(EXTRA_multimin_DEPENDENCIES) 
	@rm -f multimin$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(multimin_OBJECTS) $(multimin_LDADD) $(LIBS)

multiroots$(EXEEXT): $(multiroots_OBJECTS) $(multiroots_DEPENDENCIES) $(EXTRA_multiroots_DEPENDENCIES) 
	@rm -f multiroots$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(multiroots_OBJECTS) $(multiroots_LDADD) $(LIBS)

nlfit$(EXEEXT): $(nlfit_OBJECTS) $(nlfit_DEPENDENCIES) $(EXTRA_nlfit_DEPENDENCIES) 
	@rm -f nlfit$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(nlfit_OBJECTS) $(nlfit_LDADD) $(LIBS)

ntuple$(EXEEXT): $(ntuple_OBJECTS) $(ntuple_DEPENDENCIES) $(EXTRA_ntuple_DEPENDENCIES) 
	@rm -f ntuple$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ntuple_OBJECTS) $(ntuple_LDADD) $(LIBS)

ode$(EXEEXT): $(ode_OBJECTS) $(ode_DEPENDENCIES) $(EXTRA_ode_DEPENDENCIES) 
	@rm -f ode$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ode_OBJECTS) $(ode_LDADD) $(LIBS)

permutation$(EXEEXT): $(permutation_OBJECTS) $(permutation_DEPENDENCIES) $(EXTRA_permutation_DEPENDENCIES) 
	@rm -f permutation$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(permutation_OBJECTS) $(permutation_LDADD) $(LIBS)

poly$(EXEEXT): $(poly_OBJECTS) $(poly_DEPENDENCIES) $(EXTRA_poly_DEPENDENCIES) 
	@rm -f poly$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(poly_OBJECTS) $(poly_LDADD) $(LIBS)

rng$(EXEEXT): $(rng_OBJECTS) $(rng_DEPENDENCIES) $(EXTRA_rng_DEPENDENCIES) 
	@rm -f rng$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(rng_OBJECTS) $(rng_LDADD) $(LIBS)

roots$(EXEEXT): $(roots_OBJECTS) $(roots_DEPENDENCIES) $(EXTRA_roots_DEPENDENCIES) 
	@rm -f roots$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(roots_OBJECTS) $(roots_LDADD) $(LIBS)

siman$(EXEEXT): $(siman_OBJECTS) $(siman_DEPENDENCIES) $(EXTRA_siman_DEPENDENCIES) 
	@rm -f siman$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(siman_OBJECTS) $(siman_LDADD) $(LIBS)

sort$(EXEEXT): $(sort_OBJECTS) $(sort_DEPENDENCIES) $(EXTRA_sort_DEPENDENCIES) 
	@rm -f sort$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)

specfunc$(EXEEXT): $(specfunc_OBJECTS) $(specfunc_DEPENDENCIES) $(EXTRA_specfunc_DEPENDENCIES) 
	@rm -f specfunc$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(specfunc_OBJECTS) $(specfunc_LDADD) $(LIBS)

statistics$(EXEEXT): $(statistics_OBJECTS) $(statistics_DEPENDENCIES) $(EXTRA_statistics_DEPENDENCIES) 
	@rm -f statistics$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(statistics_OBJECTS) $(statistics_LDADD) $(LIBS)

version$(EXEEXT): $(version_OBJECTS) $(version_DEPENDENCIES) $(EXTRA_version_DEPENDENCIES) 
	@rm -f version$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(version_OBJECTS) $(version_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
poly.log: poly$(EXEEXT)
	@p='poly$(EXEEXT)'; \
	b='poly'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interp.log: interp$(EXEEXT)
	@p='interp$(EXEEXT)'; \
	b='interp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
specfunc.log: specfunc$(EXEEXT)
	@p='specfunc$(EXEEXT)'; \
	b='specfunc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
permutation.log: permutation$(EXEEXT)
	@p='permutation$(EXEEXT)'; \
	b='permutation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
integration.log: integration$(EXEEXT)
	@p='integration$(EXEEXT)'; \
	b='integration'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sort.log: sort$(EXEEXT)
	@p='sort$(EXEEXT)'; \
	b='sort'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
array.log: array$(EXEEXT)
	@p='array$(EXEEXT)'; \
	b='array'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
linalg.log: linalg$(EXEEXT)
	@p='linalg$(EXEEXT)'; \
	b='linalg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
eigen.log: eigen$(EXEEXT)
	@p='eigen$(EXEEXT)'; \
	b='eigen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fft.log: fft$(EXEEXT)
	@p='fft$(EXEEXT)'; \
	b='fft'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rng.log: rng$(EXEEXT)
	@p='rng$(EXEEXT)'; \
	b='rng'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
histogram.log: histogram$(EXEEXT)
	@p='histogram$(EXEEXT)'; \
	b='histogram'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
statistics.log: statistics$(EXEEXT)
	@p='statistics$(EXEEXT)'; \
	b='statistics'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ntuple.log: ntuple$(EXEEXT)
	@p='ntuple$(EXEEXT)'; \
	b='ntuple'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
siman.log: siman$(EXEEXT)
	@p='siman$(EXEEXT)'; \
	b='siman'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ode.log: ode$(EXEEXT)
	@p='ode$(EXEEXT)'; \
	b='ode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
deriv.log: deriv$(EXEEXT)
	@p='deriv$(EXEEXT)'; \
	b='deriv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
roots.log: roots$(EXEEXT)
	@p='roots$(EXEEXT)'; \
	b='roots'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
minim.log: minim$(EXEEXT)
	@p='minim$(EXEEXT)'; \
	b='minim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
multiroots.log: multiroots$(EXEEXT)
	@p='multiroots$(EXEEXT)'; \
	b='multiroots'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
montecarlo.log: montecarlo$(EXEEXT)
	@p='montecarlo$(EXEEXT)'; \
	b='montecarlo'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bspline.log: bspline$(EXEEXT)
	@p='bspline$(EXEEXT)'; \
	b='bspline'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
multimin.log: multimin$(EXEEXT)
	@p='multimin$(EXEEXT)'; \
	b='multimin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fit.log: fit$(EXEEXT)
	@p='fit$(EXEEXT)'; \
	b='fit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nlfit.log: nlfit$(EXEEXT)
	@p='nlfit$(EXEEXT)'; \
	b='nlfit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
version.log: version$(EXEEXT)
	@p='version$(EXEEXT)'; \
	b='version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
chebyshev.log: chebyshev$(EXEEXT)
	@p='chebyshev$(EXEEXT)'; \
	b='chebyshev'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error.log: error$(EXEEXT)
	@p='error$(EXEEXT)'; \
	b='error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ieee_utils.log: ieee_utils$(EXEEXT)
	@p='ieee_utils$(EXEEXT)'; \
	b='ieee_utils'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
math.log: math$(EXEEXT)
	@p='math$(EXEEXT)'; \
	b='math'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
interp2d.log: interp2d$(EXEEXT)
	@p='interp2d$(EXEEXT)'; \
	b='interp2d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


mod_unit.mod:	mod_unit.o

clean-local:
	rm -f *.dat *.mod

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
