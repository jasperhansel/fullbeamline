!-*-f90-*-
!
!  Interfaces: Sparse matrix linear algebra
!
function gsl_splinalg_itersolve_alloc(T, n, m) bind(c)
  import :: c_ptr, c_size_t
  type(c_ptr), value :: T
  integer(c_size_t), value :: n, m
  type(c_ptr) :: gsl_splinalg_itersolve_alloc
end function gsl_splinalg_itersolve_alloc
subroutine gsl_splinalg_itersolve_free(w) bind(c)
  import :: c_ptr
  type(c_ptr), value :: w
end subroutine gsl_splinalg_itersolve_free
function gsl_splinalg_itersolve_name(w) bind(c)
  import :: c_ptr
  type(c_ptr), value :: w
  type(c_ptr) :: gsl_splinalg_itersolve_name
end function gsl_splinalg_itersolve_name
function gsl_splinalg_itersolve_iterate(A, b, tol, x, w) bind(c)
  import :: c_ptr, c_double, c_int
  type(c_ptr), value :: A, b, x, w
  real(c_double), value :: tol
  integer(c_int) :: gsl_splinalg_itersolve_iterate
end function gsl_splinalg_itersolve_iterate
function gsl_splinalg_itersolve_normr(w) bind(c)
  import :: c_ptr, c_double
  type(c_ptr), value :: w
  real(c_double) :: gsl_splinalg_itersolve_normr
end function gsl_splinalg_itersolve_normr
function fgsl_aux_splinalg_itersolve_alloc(i) bind(c)
  import :: c_int, c_ptr
  integer(c_int), value :: i
  type(c_ptr) :: fgsl_aux_splinalg_itersolve_alloc
end function fgsl_aux_splinalg_itersolve_alloc
