This keeps growing. Can't be! And will not!

o DONE -- Enable fmt to be a string array, so matrices can get a separated line
  legend for each row/column.
o DONE -- Add function to enable/disable automatic increase in line style as each
  line is plotted. In color, a solid linestyle looks better, in b&w can't be.
o DONE -- mesh() should take into account the user axis()
o DONE -- shade() should have a legend. Doing it, however, is very complicated,
  if possible. One never knows what the current fill color really is; in
  addition, the user can change the color pallete, number of colors...
  The only way seems to be superimposing a small "rectangle" on the grid
  data, with a z value equal to the current shade level, and let plshade()
  fill it. No away!

o DONE -- some hackery done in plserver.tcl, and yet to discover possible side
  effects (unprobable) - yes. If the user accidentally clicks in the picture
  and later makes ginput(), the first mouse click is returned.
o DONE -- tk - when zooming/keycliking, control is returned to octave; must issue
  plflush() to give control back to plplot.
o DONE -- After zooming, the tk window color changes back to black, even if
  configured white.

o Take NaN and Inf into account when calculating min() and max().
o PLplot is not nan/inf aware. Can this be easily solved?

o DONE - plcolormap('default') now uses plplot default colormap, not Matlab one
o make plcolormap('default') return the default colormap, not just set it
o DONE -- make plcolormap with no arguments return the current colormap
o DONE (ignored) solve the colormap problem with True Color visuals

o DONE - add comments from plplot.h and api.tex to plplot_stub.m
o Hand tune etc/api.tex to reflect the actual implementation

o DONE - fill the legend area with background color, so lines don't mess the legend
o DONE - add lines to the legend, `a la` gnuplot
o DONE - draw a box around the legend, in opaque mode
o DONE - advance line style at the same time as line colour. This is important
  if printing on B&W.
o HACKED -- solve the log plot problem (plot values <= 0)
  The hack is buggy, no arrays can be passed as arguments! And is ugly.
  I think the best is not to plot anything, just return an error/warning

o offset the grid legend values in polar plots
o DONE - enable grid in shade plots

o DONE -- multiplot and relatives are offset by one. This is because all plot
  scripts use plenv, which by itself call pladv(0) to advance; when reaching
  the end of page, it is cleared. See next line.
o DONE -- change all plenv() to plvpor(), plbox(), etc. It is more flexible.
  Doing it, makes the whole plot session available at the plot buffer, so
  plreplot() replots all session (as does save_fig()). To solve, one must
  mark each plot session with plbop().
o IMPOSSIBLE -- plplot dont support it!.
  enable title for the whole plot when doing multiplot
o DONE --in multiplot mode plotting on a subwindow don't clear the previous plot.
  Don't know how to avoid it. Perhaps  painting with background color? yes.
o remove cross-lines after ginput has terminated. If plflush() is called in
  the command line, the cross-hair disappears! but not if called in the
  ginput function or any function that call ginput!
o DONE - avoid CTRL-C killing the tk driver (hack in tk.c)
o make hist.m use plplot plhist()
o DONE - solve the waitforkey(button)press problem in tk driver. hack in tk.c

o DONE -- change all global variables to a structure, and keep information on a per
  window base.
o optimize some scripts that suffered from the automatic conversion from globals
  to multifigure globals structure
o DONE -- make attributes (axis, color, linestyle, etc) on a per figure basis
o change figure() to be Matlab compliant. This implies globals in structure
  and in array mode, one per window.

o DONE -- make sure that having to specify -lplplotdtk -lMatrix -ltk -ltcl -lX11
  when linking *Octave*, and not when making the .oct file is an SCO bug
  related with shared libs!
