[mlname(pl_setcontlabelformat)] void c_pl_setcontlabelformat ( int lexp, int sigdig );
[mlname(pl_setcontlabelparam)] void c_pl_setcontlabelparam ( double offset, double size, double spacing, int active );
[mlname(pladv)] void c_pladv ( int page );
[mlname(plarc)] void c_plarc ( double x, double y, double a, double b, double angle1, double angle2, double rotate, boolean fill );
[mlname(plaxes)] void c_plaxes ( double x0, double y0, [string] const char * xopt, double xtick, int nxsub, [string] const char * yopt, double ytick, int nysub );
[mlname(plbin)] void c_plbin ( int nbin, [in, size_is(nbin)] double * x, [in, size_is(nbin)] double * y, plplot_bin_style opt );
[mlname(plbtime)] void c_plbtime ( [out] int * year, [out] int * month, [out] int * day, [out] int * hour, [out] int * min, [out] double * sec, double ctime );
[mlname(plbop)] void c_plbop ( void );
[mlname(plbox)] void c_plbox ( [string] const char * xopt, double xtick, int nxsub, [string] const char * yopt, double ytick, int nysub );
[mlname(plbox3)] void c_plbox3 ( [string] const char * xopt, [string] const char * xlabel, double xtick, int nsubx, [string] const char * yopt, [string] const char * ylabel, double ytick, int nsuby, [string] const char * zopt, [string] const char * zlabel, double ztick, int nsubz );
[mlname(plcalc_world)] void c_plcalc_world ( double rx, double ry, [out] double * wx, [out] double * wy, [out] int * window );
[mlname(plclear)] void c_plclear ( void );
[mlname(plcol0)] void c_plcol0 ( int icol0 );
[mlname(plcol1)] void c_plcol1 ( double col1 );
[mlname(plconfigtime)] void c_plconfigtime ( double scale, double offset1, double offset2, int ccontrol, boolean ifbtime_offset, int year, int month, int day, int hour, int min, double sec );
[mlname(plcpstrm)] void c_plcpstrm ( int iplsr, boolean flags );
[mlname(plctime)] void c_plctime ( int year, int month, int day, int hour, int min, double sec, [out] double * ctime );
[mlname(plend)] void c_plend ( void );
[mlname(plend1)] void c_plend1 ( void );
[mlname(plenv)] void c_plenv ( double xmin, double xmax, double ymin, double ymax, int just, int axis );
[mlname(plenv0)] void c_plenv0 ( double xmin, double xmax, double ymin, double ymax, int just, int axis );
[mlname(pleop)] void c_pleop ( void );
[mlname(plerrx)] void c_plerrx ( int n, [in, size_is(n)] double * xmin, [in, size_is(n)] double * xmax, [in, size_is(n)] double * y );
[mlname(plerry)] void c_plerry ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * ymin, [in, size_is(n)] double * ymax );
[mlname(plfamadv)] void c_plfamadv ( void );
[mlname(plfill)] void c_plfill ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y );
[mlname(plfill3)] void c_plfill3 ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, [in, size_is(n)] double * z );
[mlname(plflush)] void c_plflush ( void );
[mlname(plfont)] void c_plfont ( int ifont );
[mlname(plfontld)] void c_plfontld ( int fnt );
[mlname(plgchr)] void c_plgchr ( [out] double * p_def, [out] double * p_ht );
[mlname(plgcmap1_range)] void c_plgcmap1_range ( [out] double * min_color, [out] double * max_color );
[mlname(plgcol0)] void c_plgcol0 ( int icol0, [out] int * r, [out] int * g, [out] int * b );
[mlname(plgcol0a)] void c_plgcol0a ( int icol0, [out] int * r, [out] int * g, [out] int * b, [out] double * a );
[mlname(plgcolbg)] void c_plgcolbg ( [out] int * r, [out] int * g, [out] int * b );
[mlname(plgcolbga)] void c_plgcolbga ( [out] int * r, [out] int * g, [out] int * b, [out] double * a );
[mlname(plgcompression)] void c_plgcompression ( [out] int * compression );
[mlname(plgdev)] void c_plgdev ( [string, out, length_is(1024)] char * p_dev );
[mlname(plgdidev)] void c_plgdidev ( [out] double * p_mar, [out] double * p_aspect, [out] double * p_jx, [out] double * p_jy );
[mlname(plgdiori)] void c_plgdiori ( [out] double * p_rot );
[mlname(plgdiplt)] void c_plgdiplt ( [out] double * p_xmin, [out] double * p_ymin, [out] double * p_xmax, [out] double * p_ymax );
[mlname(plgdrawmode)] enum plplot_draw_mode_enum c_plgdrawmode ( );
[mlname(plgfci)] void c_plgfci ( [out] long long * pfci );
[mlname(plgfam)] void c_plgfam ( [out] int * p_fam, [out] int * p_num, [out] int * p_bmax );
[mlname(plgfnam)] void c_plgfnam ( [string, out, length_is(1024)] char * fnam );
[mlname(plgfont)] void c_plgfont ( [out] int * p_family, [out] int * p_style, [out] int * p_weight );
[mlname(plglevel)] void c_plglevel ( [out] plplot_run_level * p_level );
[mlname(plgpage)] void c_plgpage ( [out] double * p_xp, [out] double * p_yp, [out] int * p_xleng, [out] int * p_yleng, [out] int * p_xoff, [out] int * p_yoff );
[mlname(plgra)] void c_plgra ( void );
[mlname(plgradient)] void c_plgradient ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, double angle );
[mlname(plgspa)] void c_plgspa ( [out] double * xmin, [out] double * xmax, [out] double * ymin, [out] double * ymax );
[mlname(plgstrm)] void c_plgstrm ( [out] int * p_strm );
[mlname(plgver)] void c_plgver ( [string, out, length_is(1024)] char * p_ver );
[mlname(plgvpd)] void c_plgvpd ( [out] double * p_xmin, [out] double * p_xmax, [out] double * p_ymin, [out] double * p_ymax );
[mlname(plgvpw)] void c_plgvpw ( [out] double * p_xmin, [out] double * p_xmax, [out] double * p_ymin, [out] double * p_ymax );
[mlname(plgxax)] void c_plgxax ( [out] int * p_digmax, [out] int * p_digits );
[mlname(plgyax)] void c_plgyax ( [out] int * p_digmax, [out] int * p_digits );
[mlname(plgzax)] void c_plgzax ( [out] int * p_digmax, [out] int * p_digits );
[mlname(plhist)] void c_plhist ( int n, [in, size_is(n), size_is(n)] double * data, double datmin, double datmax, int nbin, plplot_hist_style opt );
[mlname(plhlsrgb)] void c_plhlsrgb ( double h, double l, double s, [out] double * p_r, [out] double * p_g, [out] double * p_b );
[mlname(plinit)] void c_plinit ( void );
[mlname(pljoin)] void c_pljoin ( double x1, double y1, double x2, double y2 );
[mlname(pllab)] void c_pllab ( [string] const char * xlabel, [string] const char * ylabel, [string] const char * tlabel );
[mlname(pllightsource)] void c_pllightsource ( double x, double y, double z );
[mlname(plline)] void c_plline ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y );
[mlname(plline3)] void c_plline3 ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, [in, size_is(n)] double * z );
[mlname(pllsty)] void c_pllsty ( int lin );
[mlname(plmesh)] void c_plmesh ( [size_is(nx), in] double * x, [size_is(ny), in] double * y, [size_is(nx, ny), in] double ** z, int nx, int ny, plplot3d_style opt );
[mlname(plmeshc)] void c_plmeshc ( [size_is(nx), in] double * x, [size_is(ny), in] double * y, [size_is(nx, ny), in] double ** z, int nx, int ny, plplot3d_style opt, [size_is(nlevel), in] double * clevel, int nlevel );
[mlname(plmkstrm)] void c_plmkstrm ( [out] int * p_strm );
[mlname(plmtex)] void c_plmtex ( [string] const char * side, double disp, double pos, double just, [string] const char * text );
[mlname(plmtex3)] void c_plmtex3 ( [string] const char * side, double disp, double pos, double just, [string] const char * text );
[mlname(plot3d)] void c_plot3d ( [size_is(nx), in] double * x, [size_is(ny), in] double * y, [size_is(nx, ny), in] double ** z, int nx, int ny, plplot3d_style opt, boolean side );
[mlname(plot3dc)] void c_plot3dc ( [size_is(nx), in] double * x, [size_is(ny), in] double * y, [size_is(nx, ny), in] double ** z, int nx, int ny, plplot3d_style opt, [size_is(nlevel), in] double * clevel, int nlevel );
[mlname(plpat)] void c_plpat ( int nlin, [in, size_is(nlin)] int * inc, [in, size_is(nlin)] int * del );
[mlname(plpath)] void c_plpath ( int n, double x1, double y1, double x2, double y2 );
[mlname(plpoin)] void c_plpoin ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, int code );
[mlname(plpoin3)] void c_plpoin3 ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, [in, size_is(n)] double * z, int code );
[mlname(plprec)] void c_plprec ( int setp, int prec );
[mlname(plpsty)] void c_plpsty ( int patt );
[mlname(plptex)] void c_plptex ( double x, double y, double dx, double dy, double just, [string] const char * text );
[mlname(plptex3)] void c_plptex3 ( double wx, double wy, double wz, double dx, double dy, double dz, double sx, double sy, double sz, double just, [string] const char * text );
[mlname(plrandd)] double c_plrandd ( void );
[mlname(plreplot)] void c_plreplot ( void );
[mlname(plrgbhls)] void c_plrgbhls ( double r, double g, double b, [out] double * p_h, [out] double * p_l, [out] double * p_s );
[mlname(plschr)] void c_plschr ( double def, double scale );
[mlname(plscmap0)] void c_plscmap0 ( [size_is(ncol0), in] int * r, [size_is(ncol0), in] int * g, [size_is(ncol0), in] int * b, int ncol0 );
[mlname(plscmap0a)] void c_plscmap0a ( [size_is(ncol0), in] int * r, [size_is(ncol0), in] int * g, [size_is(ncol0), in] int * b, [size_is(ncol0), in] double * a, int ncol0 );
[mlname(plscmap0n)] void c_plscmap0n ( int ncol0 );
[mlname(plscmap1)] void c_plscmap1 ( [size_is(ncol1), in] int * r, [size_is(ncol1), in] int * g, [size_is(ncol1), in] int * b, int ncol1 );
[mlname(plscmap1a)] void c_plscmap1a ( [size_is(ncol1), in] int * r, [size_is(ncol1), in] int * g, [size_is(ncol1), in] int * b, [size_is(ncol1), in] double * a, int ncol1 );
[mlname(plscmap1l)] void c_plscmap1l ( boolean itype, int npts, [size_is(npts), in, size_is(npts)] double * intensity, [size_is(npts), in, size_is(npts)] double * coord1, [size_is(npts), in, size_is(npts)] double * coord2, [size_is(npts), in, size_is(npts)] double * coord3, [in, size_is(npts), in, size_is(npts), unique] boolean * alt_hue_path );
[mlname(plscmap1la)] void c_plscmap1la ( boolean itype, int npts, [size_is(npts), in, size_is(npts)] double * intensity, [size_is(npts), in, size_is(npts)] double * coord1, [size_is(npts), in, size_is(npts)] double * coord2, [size_is(npts), in, size_is(npts)] double * coord3, [size_is(npts), in, size_is(npts)] double * a, [in, size_is(npts), in, size_is(npts), unique] boolean * alt_hue_path );
[mlname(plscmap1n)] void c_plscmap1n ( int ncol1 );
[mlname(plscmap1_range)] void c_plscmap1_range ( double min_color, double max_color );
[mlname(plscol0)] void c_plscol0 ( int icol0, int r, int g, int b );
[mlname(plscol0a)] void c_plscol0a ( int icol0, int r, int g, int b, double a );
[mlname(plscolbg)] void c_plscolbg ( int r, int g, int b );
[mlname(plscolbga)] void c_plscolbga ( int r, int g, int b, double a );
[mlname(plscolor)] void c_plscolor ( int color );
[mlname(plscompression)] void c_plscompression ( int compression );
[mlname(plsdev)] void c_plsdev ( [string] const char * devname );
[mlname(plsdidev)] void c_plsdidev ( double mar, double aspect, double jx, double jy );
[mlname(plsdimap)] void c_plsdimap ( int dimxmin, int dimxmax, int dimymin, int dimymax, double dimxpmm, double dimypmm );
[mlname(plsdiori)] void c_plsdiori ( double rot );
[mlname(plsdiplt)] void c_plsdiplt ( double xmin, double ymin, double xmax, double ymax );
[mlname(plsdiplz)] void c_plsdiplz ( double xmin, double ymin, double xmax, double ymax );
[mlname(plseed)] void c_plseed ( [int64] unsigned int s );
[mlname(plsesc)] void c_plsesc ( char esc );
[mlname(plsfam)] void c_plsfam ( int fam, int num, int bmax );
[mlname(plsfci)] void c_plsfci ( long long fci );
[mlname(plsfnam)] void c_plsfnam ( [string] const char * fnam );
[mlname(plsfont)] void c_plsfont ( enum plplot_fci_family_enum family, enum plplot_fci_style_enum style, enum plplot_fci_weight_enum weight );
[mlname(plsmaj)] void c_plsmaj ( double def, double scale );
[mlname(plsmin)] void c_plsmin ( double def, double scale );
[mlname(plsdrawmode)] void c_plsdrawmode ( enum plplot_draw_mode_enum mode );
[mlname(plsori)] void c_plsori ( int ori );
[mlname(plspage)] void c_plspage ( double xp, double yp, int xleng, int yleng, int xoff, int yoff );
[mlname(plspal0)] void c_plspal0 ( [string] const char * filename );
[mlname(plspal1)] void c_plspal1 ( [string] const char * filename, boolean interpolate );
[mlname(plspause)] void c_plspause ( boolean pause );
[mlname(plsstrm)] void c_plsstrm ( int strm );
[mlname(plssub)] void c_plssub ( int nx, int ny );
[mlname(plssym)] void c_plssym ( double def, double scale );
[mlname(plstar)] void c_plstar ( int nx, int ny );
[mlname(plstart)] void c_plstart ( [string] const char * devname, int nx, int ny );
[mlname(plstring)] void c_plstring ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, [string] const char * string );
[mlname(plstring3)] void c_plstring3 ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, [in, size_is(n)] double * z, [string] const char * string );
[mlname(plstripa)] void c_plstripa ( int id, int pen, double x, double y );
[mlname(plstripd)] void c_plstripd ( int id );
[mlname(plimage)] void c_plimage ( [in, size_is(nx, ny)] double ** idata, int nx, int ny, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax, double Dxmin, double Dxmax, double Dymin, double Dymax );
[mlname(plstyl)] void c_plstyl ( int nms, [size_is(nms)] int * mark, [size_is(nms)] int * space );
[mlname(plsurf3d)] void c_plsurf3d ( [size_is(nx), in] double * x, [size_is(ny), in] double * y, [size_is(nx, ny), in] double ** z, int nx, int ny, plplot3d_style opt, [size_is(nlevel), in] double * clevel, int nlevel );
[mlname(plsvect)] void c_plsvect ( [in, size_is(npts)] double * arrowx, [in, size_is(npts)] double * arrowy, int npts, boolean fill );
[mlname(plsvpa)] void c_plsvpa ( double xmin, double xmax, double ymin, double ymax );
[mlname(plsxax)] void c_plsxax ( int digmax, int digits );
void plsxwin ( int window_id );
[mlname(plsyax)] void c_plsyax ( int digmax, int digits );
[mlname(plsym)] void c_plsym ( int n, [in, size_is(n)] double * x, [in, size_is(n)] double * y, int code );
[mlname(plszax)] void c_plszax ( int digmax, int digits );
[mlname(pltext)] void c_pltext ( void );
[mlname(pltimefmt)] void c_pltimefmt ( [string] const char * fmt );
[mlname(plvasp)] void c_plvasp ( double aspect );
[mlname(plvpas)] void c_plvpas ( double xmin, double xmax, double ymin, double ymax, double aspect );
[mlname(plvpor)] void c_plvpor ( double xmin, double xmax, double ymin, double ymax );
[mlname(plvsta)] void c_plvsta ( void );
[mlname(plw3d)] void c_plw3d ( double basex, double basey, double height, double xmin0, double xmax0, double ymin0, double ymax0, double zmin0, double zmax0, double alt, double az );
[mlname(plwidth)] void c_plwidth ( double width );
[mlname(plwind)] void c_plwind ( double xmin, double xmax, double ymin, double ymax );
[mlname(plxormod)] void c_plxormod ( boolean mode, [out] boolean * status );
[mlname(plsetopt)] nonzero_error_int c_plsetopt ( [string] const char * opt, [string] const char * optarg );
void plMinMax2dGrid ( [size_is(nx, ny)] double ** f, int nx, int ny, [out] double * fmax, [out] double * fmin );
